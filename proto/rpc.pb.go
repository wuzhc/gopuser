// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PushRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   []string `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	AppID                string   `protobuf:"bytes,3,opt,name=appID,proto3" json:"appID,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRequest) Reset()         { *m = PushRequest{} }
func (m *PushRequest) String() string { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()    {}
func (*PushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *PushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRequest.Unmarshal(m, b)
}
func (m *PushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRequest.Marshal(b, m, deterministic)
}
func (m *PushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRequest.Merge(m, src)
}
func (m *PushRequest) XXX_Size() int {
	return xxx_messageInfo_PushRequest.Size(m)
}
func (m *PushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRequest proto.InternalMessageInfo

func (m *PushRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *PushRequest) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *PushRequest) GetAppID() string {
	if m != nil {
		return m.AppID
	}
	return ""
}

func (m *PushRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type PushReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushReply) Reset()         { *m = PushReply{} }
func (m *PushReply) String() string { return proto.CompactTextString(m) }
func (*PushReply) ProtoMessage()    {}
func (*PushReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *PushReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushReply.Unmarshal(m, b)
}
func (m *PushReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushReply.Marshal(b, m, deterministic)
}
func (m *PushReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushReply.Merge(m, src)
}
func (m *PushReply) XXX_Size() int {
	return xxx_messageInfo_PushReply.Size(m)
}
func (m *PushReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushReply proto.InternalMessageInfo

func (m *PushReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PushReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SystemRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemRequest) Reset()         { *m = SystemRequest{} }
func (m *SystemRequest) String() string { return proto.CompactTextString(m) }
func (*SystemRequest) ProtoMessage()    {}
func (*SystemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *SystemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemRequest.Unmarshal(m, b)
}
func (m *SystemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemRequest.Marshal(b, m, deterministic)
}
func (m *SystemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemRequest.Merge(m, src)
}
func (m *SystemRequest) XXX_Size() int {
	return xxx_messageInfo_SystemRequest.Size(m)
}
func (m *SystemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SystemRequest proto.InternalMessageInfo

func (m *SystemRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type SystemReply struct {
	CpuNum               int64    `protobuf:"varint,1,opt,name=cpuNum,proto3" json:"cpuNum,omitempty"`
	GoroutineNum         int64    `protobuf:"varint,2,opt,name=goroutineNum,proto3" json:"goroutineNum,omitempty"`
	ClientNum            int64    `protobuf:"varint,3,opt,name=clientNum,proto3" json:"clientNum,omitempty"`
	GroupNum             int64    `protobuf:"varint,4,opt,name=groupNum,proto3" json:"groupNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemReply) Reset()         { *m = SystemReply{} }
func (m *SystemReply) String() string { return proto.CompactTextString(m) }
func (*SystemReply) ProtoMessage()    {}
func (*SystemReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *SystemReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemReply.Unmarshal(m, b)
}
func (m *SystemReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemReply.Marshal(b, m, deterministic)
}
func (m *SystemReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemReply.Merge(m, src)
}
func (m *SystemReply) XXX_Size() int {
	return xxx_messageInfo_SystemReply.Size(m)
}
func (m *SystemReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemReply.DiscardUnknown(m)
}

var xxx_messageInfo_SystemReply proto.InternalMessageInfo

func (m *SystemReply) GetCpuNum() int64 {
	if m != nil {
		return m.CpuNum
	}
	return 0
}

func (m *SystemReply) GetGoroutineNum() int64 {
	if m != nil {
		return m.GoroutineNum
	}
	return 0
}

func (m *SystemReply) GetClientNum() int64 {
	if m != nil {
		return m.ClientNum
	}
	return 0
}

func (m *SystemReply) GetGroupNum() int64 {
	if m != nil {
		return m.GroupNum
	}
	return 0
}

type IsOnlineRequest struct {
	CardID               string   `protobuf:"bytes,1,opt,name=cardID,proto3" json:"cardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsOnlineRequest) Reset()         { *m = IsOnlineRequest{} }
func (m *IsOnlineRequest) String() string { return proto.CompactTextString(m) }
func (*IsOnlineRequest) ProtoMessage()    {}
func (*IsOnlineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *IsOnlineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsOnlineRequest.Unmarshal(m, b)
}
func (m *IsOnlineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsOnlineRequest.Marshal(b, m, deterministic)
}
func (m *IsOnlineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsOnlineRequest.Merge(m, src)
}
func (m *IsOnlineRequest) XXX_Size() int {
	return xxx_messageInfo_IsOnlineRequest.Size(m)
}
func (m *IsOnlineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsOnlineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsOnlineRequest proto.InternalMessageInfo

func (m *IsOnlineRequest) GetCardID() string {
	if m != nil {
		return m.CardID
	}
	return ""
}

type IsOnlineReply struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsOnlineReply) Reset()         { *m = IsOnlineReply{} }
func (m *IsOnlineReply) String() string { return proto.CompactTextString(m) }
func (*IsOnlineReply) ProtoMessage()    {}
func (*IsOnlineReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *IsOnlineReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsOnlineReply.Unmarshal(m, b)
}
func (m *IsOnlineReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsOnlineReply.Marshal(b, m, deterministic)
}
func (m *IsOnlineReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsOnlineReply.Merge(m, src)
}
func (m *IsOnlineReply) XXX_Size() int {
	return xxx_messageInfo_IsOnlineReply.Size(m)
}
func (m *IsOnlineReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IsOnlineReply.DiscardUnknown(m)
}

var xxx_messageInfo_IsOnlineReply proto.InternalMessageInfo

func (m *IsOnlineReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type GroupRequest struct {
	CardID               string   `protobuf:"bytes,1,opt,name=cardID,proto3" json:"cardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupRequest) Reset()         { *m = GroupRequest{} }
func (m *GroupRequest) String() string { return proto.CompactTextString(m) }
func (*GroupRequest) ProtoMessage()    {}
func (*GroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *GroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRequest.Unmarshal(m, b)
}
func (m *GroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRequest.Marshal(b, m, deterministic)
}
func (m *GroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRequest.Merge(m, src)
}
func (m *GroupRequest) XXX_Size() int {
	return xxx_messageInfo_GroupRequest.Size(m)
}
func (m *GroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRequest proto.InternalMessageInfo

func (m *GroupRequest) GetCardID() string {
	if m != nil {
		return m.CardID
	}
	return ""
}

type GroupReply struct {
	ClientNum            int64    `protobuf:"varint,1,opt,name=clientNum,proto3" json:"clientNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupReply) Reset()         { *m = GroupReply{} }
func (m *GroupReply) String() string { return proto.CompactTextString(m) }
func (*GroupReply) ProtoMessage()    {}
func (*GroupReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}

func (m *GroupReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupReply.Unmarshal(m, b)
}
func (m *GroupReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupReply.Marshal(b, m, deterministic)
}
func (m *GroupReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupReply.Merge(m, src)
}
func (m *GroupReply) XXX_Size() int {
	return xxx_messageInfo_GroupReply.Size(m)
}
func (m *GroupReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupReply.DiscardUnknown(m)
}

var xxx_messageInfo_GroupReply proto.InternalMessageInfo

func (m *GroupReply) GetClientNum() int64 {
	if m != nil {
		return m.ClientNum
	}
	return 0
}

func init() {
	proto.RegisterType((*PushRequest)(nil), "proto.PushRequest")
	proto.RegisterType((*PushReply)(nil), "proto.PushReply")
	proto.RegisterType((*SystemRequest)(nil), "proto.SystemRequest")
	proto.RegisterType((*SystemReply)(nil), "proto.SystemReply")
	proto.RegisterType((*IsOnlineRequest)(nil), "proto.IsOnlineRequest")
	proto.RegisterType((*IsOnlineReply)(nil), "proto.IsOnlineReply")
	proto.RegisterType((*GroupRequest)(nil), "proto.GroupRequest")
	proto.RegisterType((*GroupReply)(nil), "proto.GroupReply")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4b, 0x8e, 0xd4, 0x30,
	0x10, 0x55, 0xbe, 0xd3, 0xa9, 0x9e, 0x6f, 0xd1, 0x1a, 0x45, 0xd1, 0x2c, 0x46, 0x46, 0x82, 0x61,
	0x16, 0x13, 0x09, 0x56, 0xb0, 0x80, 0x05, 0x23, 0xa1, 0x16, 0x12, 0xa0, 0x70, 0x82, 0x90, 0x36,
	0xe9, 0x48, 0x69, 0xdb, 0xc4, 0xf6, 0xa2, 0xb7, 0x70, 0x04, 0x36, 0xdc, 0x8b, 0x2b, 0x70, 0x10,
	0xe4, 0x4f, 0xe8, 0x4e, 0x23, 0xc1, 0xca, 0x7e, 0xaf, 0x5e, 0xbd, 0x2a, 0x57, 0x19, 0xb2, 0x41,
	0x34, 0x77, 0x62, 0xe0, 0x8a, 0x63, 0x62, 0x8f, 0xe2, 0xaa, 0xe5, 0xbc, 0xed, 0x69, 0x59, 0x8b,
	0xae, 0xac, 0x19, 0xe3, 0xaa, 0x56, 0x1d, 0x67, 0xd2, 0x89, 0x48, 0x0d, 0xf3, 0x0f, 0x5a, 0xae,
	0x2b, 0xfa, 0x45, 0x53, 0xa9, 0x10, 0x21, 0xfe, 0x3c, 0xf0, 0x4d, 0x1e, 0x5c, 0x07, 0x37, 0x59,
	0x65, 0xef, 0x78, 0x0a, 0xa1, 0xe2, 0x79, 0x78, 0x1d, 0xdd, 0x64, 0x55, 0xa8, 0x38, 0x2e, 0x20,
	0xa9, 0x85, 0x58, 0xde, 0xe7, 0x91, 0x15, 0x39, 0x80, 0x39, 0x1c, 0x35, 0x9c, 0x29, 0xca, 0x54,
	0x1e, 0x5b, 0x7e, 0x84, 0xe4, 0x39, 0x64, 0xae, 0x84, 0xe8, 0xb7, 0xa6, 0x40, 0xc3, 0x57, 0xd4,
	0x16, 0x48, 0x2a, 0x7b, 0x37, 0xa9, 0x1b, 0x2a, 0x65, 0xdd, 0xd2, 0x3c, 0x74, 0xa9, 0x1e, 0x92,
	0x87, 0x70, 0xf2, 0x71, 0x2b, 0x15, 0xdd, 0xfc, 0xa3, 0x3f, 0xf2, 0x2d, 0x80, 0xf9, 0xa8, 0x32,
	0x25, 0x2e, 0x21, 0x6d, 0x84, 0x7e, 0xa7, 0x9d, 0x2a, 0xaa, 0x3c, 0x42, 0x02, 0xc7, 0x2d, 0x1f,
	0xb8, 0x56, 0x1d, 0xa3, 0x26, 0x1a, 0xda, 0xe8, 0x84, 0xc3, 0x2b, 0xc8, 0x9a, 0xbe, 0xa3, 0x4c,
	0x19, 0x41, 0x64, 0x05, 0x3b, 0x02, 0x0b, 0x98, 0xb5, 0x03, 0xd7, 0xc2, 0x04, 0x63, 0x1b, 0xfc,
	0x83, 0xc9, 0x13, 0x38, 0x5b, 0xca, 0xf7, 0xac, 0xef, 0x18, 0x1d, 0x9b, 0x35, 0x8d, 0xd4, 0xc3,
	0x6a, 0x79, 0xef, 0xdb, 0xf5, 0x88, 0x3c, 0x86, 0x93, 0x9d, 0xd4, 0x77, 0x3c, 0x50, 0xa9, 0x7b,
	0x35, 0x0a, 0x1d, 0x22, 0x8f, 0xe0, 0xf8, 0x8d, 0xf1, 0xff, 0x9f, 0xe1, 0x2d, 0x80, 0xd7, 0x19,
	0xb7, 0xc9, 0x1b, 0x82, 0x83, 0x37, 0x3c, 0xfd, 0x11, 0x42, 0x54, 0x89, 0x06, 0x5f, 0x42, 0x6c,
	0xb6, 0x82, 0xe8, 0x3e, 0xc2, 0xdd, 0xde, 0x2f, 0x28, 0xce, 0x27, 0x9c, 0xe8, 0xb7, 0xe4, 0xfc,
	0xeb, 0xcf, 0x5f, 0xdf, 0x43, 0x20, 0x49, 0x29, 0xb4, 0x5c, 0xbf, 0x08, 0x6e, 0xf1, 0x35, 0xa4,
	0x6e, 0xe8, 0xb8, 0xf0, 0xea, 0xc9, 0xa6, 0x0a, 0x3c, 0x60, 0x8d, 0xcb, 0x99, 0x75, 0xc9, 0xf0,
	0xa8, 0x94, 0x2e, 0xf5, 0x2d, 0xcc, 0xc6, 0x49, 0xe0, 0xa5, 0x4f, 0x38, 0x98, 0x62, 0xb1, 0xf8,
	0x8b, 0x37, 0x56, 0x17, 0xd6, 0x6a, 0x8e, 0x59, 0xd9, 0x8d, 0x06, 0xaf, 0x20, 0xb1, 0x53, 0xc0,
	0x07, 0x3e, 0x63, 0x7f, 0x76, 0xc5, 0xc5, 0x94, 0x34, 0x1e, 0xa7, 0xd6, 0x63, 0x86, 0x69, 0x69,
	0xb7, 0xf8, 0x29, 0xb5, 0x8a, 0x67, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x4f, 0xc9, 0xaf,
	0x44, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcClient is the client API for Rpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcClient interface {
	Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushReply, error)
	System(ctx context.Context, in *SystemRequest, opts ...grpc.CallOption) (*SystemReply, error)
	IsOnline(ctx context.Context, in *IsOnlineRequest, opts ...grpc.CallOption) (*IsOnlineReply, error)
	Group(ctx context.Context, in *GroupRequest, opts ...grpc.CallOption) (*GroupReply, error)
}

type rpcClient struct {
	cc *grpc.ClientConn
}

func NewRpcClient(cc *grpc.ClientConn) RpcClient {
	return &rpcClient{cc}
}

func (c *rpcClient) Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushReply, error) {
	out := new(PushReply)
	err := c.cc.Invoke(ctx, "/proto.Rpc/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcClient) System(ctx context.Context, in *SystemRequest, opts ...grpc.CallOption) (*SystemReply, error) {
	out := new(SystemReply)
	err := c.cc.Invoke(ctx, "/proto.Rpc/System", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcClient) IsOnline(ctx context.Context, in *IsOnlineRequest, opts ...grpc.CallOption) (*IsOnlineReply, error) {
	out := new(IsOnlineReply)
	err := c.cc.Invoke(ctx, "/proto.Rpc/IsOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcClient) Group(ctx context.Context, in *GroupRequest, opts ...grpc.CallOption) (*GroupReply, error) {
	out := new(GroupReply)
	err := c.cc.Invoke(ctx, "/proto.Rpc/Group", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcServer is the server API for Rpc service.
type RpcServer interface {
	Push(context.Context, *PushRequest) (*PushReply, error)
	System(context.Context, *SystemRequest) (*SystemReply, error)
	IsOnline(context.Context, *IsOnlineRequest) (*IsOnlineReply, error)
	Group(context.Context, *GroupRequest) (*GroupReply, error)
}

// UnimplementedRpcServer can be embedded to have forward compatible implementations.
type UnimplementedRpcServer struct {
}

func (*UnimplementedRpcServer) Push(ctx context.Context, req *PushRequest) (*PushReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}
func (*UnimplementedRpcServer) System(ctx context.Context, req *SystemRequest) (*SystemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method System not implemented")
}
func (*UnimplementedRpcServer) IsOnline(ctx context.Context, req *IsOnlineRequest) (*IsOnlineReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsOnline not implemented")
}
func (*UnimplementedRpcServer) Group(ctx context.Context, req *GroupRequest) (*GroupReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Group not implemented")
}

func RegisterRpcServer(s *grpc.Server, srv RpcServer) {
	s.RegisterService(&_Rpc_serviceDesc, srv)
}

func _Rpc_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Rpc/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServer).Push(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rpc_System_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServer).System(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Rpc/System",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServer).System(ctx, req.(*SystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rpc_IsOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsOnlineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServer).IsOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Rpc/IsOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServer).IsOnline(ctx, req.(*IsOnlineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rpc_Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServer).Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Rpc/Group",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServer).Group(ctx, req.(*GroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Rpc",
	HandlerType: (*RpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _Rpc_Push_Handler,
		},
		{
			MethodName: "System",
			Handler:    _Rpc_System_Handler,
		},
		{
			MethodName: "IsOnline",
			Handler:    _Rpc_IsOnline_Handler,
		},
		{
			MethodName: "Group",
			Handler:    _Rpc_Group_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
